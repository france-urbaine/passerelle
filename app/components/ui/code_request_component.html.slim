= tabs_component do |tabs|
  - tabs.with_tab("cURL") do
    = code_example_component(:shell) do
      | $ curl -X #{@verb} #{url}

      - @request_headers.sort_by(&:first).each do |(key, value)|
        |  \
              -H "#{key}: #{value}"

      - if @request_file&.any?
        |  \
              --data-binary "@#{@request_file}"

      - if @request_body&.any?
        |  \
              -d '#{request_body_formatted}'

  - tabs.with_tab("httpie") do
    = code_example_component(:shell) do
      | $ http -v #{@verb} #{url}

      - @request_headers.sort_by(&:first).each do |(key, value)|
        |  \
              #{key}:"#{value}"

      - if @request_file&.any?
        |  \
              @#{@request_file}

      - if @request_body&.any?
        |  \
              --raw='#{request_body_formatted}'

= code_example_component do |code|
  - code.with_language(:http) do
    | GET #{url.path} HTTP/1.1

    - request_headers_formatted.each do |(key, value)|
      br
      | #{key}: #{value}

  - if @json && @request_body&.any?
    - code.with_language(:json) do
      = JSON.pretty_generate(JSON.parse(request_body_formatted))

  - code.with_language(:http) do
    | HTTP/1.1 #{@response_code} #{Rack::Utils::HTTP_STATUS_CODES[@response_code]}

    - @response_headers.sort_by(&:first).each do |(key, value)|
      br
      | #{key}: #{value}

  - if @json && @response_body&.any?
    - code.with_language(:json) do
      = JSON.pretty_generate(JSON.parse(response_body_formatted))