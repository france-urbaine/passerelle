= render Modal::Component.new(redirection_path: @redirection_path) do |modal|
  - modal.with_header do
    - if @collectivity.new_record?
      | Création d'une nouvelle collectivité
    - else
      | Modification de la collectivité

  - modal.with_form(model: @collectivity, url: form_url) do |form|
    - modal.with_hidden_field :redirect, @redirection_path

    - if @scope == :admin && @publisher.nil?
      = form.block :publisher_id do
        = form.label :publisher_id, "Éditeur"
        = form.select :publisher_id, publisher_id_choice, publisher_id_options

    = form.block :territory, autocomplete: territories_path do
      = form.label :territory
      = form.search_field :territory,      data: { autocomplete_target: "input" }, **territory_input_html_attributes
      = form.hidden_field :territory_data, data: { autocomplete_target: "hidden" }, **territory_hidden_html_attributes

    = render Noscript::Component.new do
      = form.block :territory_type do
        = form.label :territory_type
        = form.select :territory_type, territory_type_choice, autofocus: true, required: true

      = form.block :territory do |block|
        = form.label :territory_code
        = form.text_field :territory_code, required: true, value: territory_code

        - block.with_hint do
          p
            | En l'absence de Javascript, vous devez saisir un code pour identifier la collectivité :
          ul.list-disc.list-inside
            li Pour une commune, saisissez son code INSEE à 5 chiffre (64102, 2B301, ...)
            li Pour un EPCI, saisissez son code SIREN
            li Pour un département ou une region, saisissez son code (75, 971, ...)

    = form.block :name do
      = form.label :name
      = form.text_field :name, required: true

    = form.block :siren do
      = form.label :siren
      = form.text_field :siren, required: true

    = form.block :contact_first_name do
      = form.label :contact_first_name
      = form.text_field :contact_first_name

    = form.block :contact_last_name do
      = form.label :contact_last_name
      = form.text_field :contact_last_name

    = form.block :contact_email do
      = form.label :contact_email
      = form.email_field :contact_email

    = form.block :contact_phone do
      = form.label :contact_phone
      = form.text_field :contact_phone

    = form.block :allow_2fa_via_email do |block|
      = form.check_box :allow_2fa_via_email
      = form.label :allow_2fa_via_email

      - block.with_hint do
        p
          | L'authentification en 2 facteurs (2FA) est activée pour tous les utilisateurs.
          br
          | Par défaut, la méthode proposée est d'utiliser un autre appareil pour générer des codes de vérification.
          br
          | Vous pouvez autoriser les utilisateurs de cette organisation à recevoir un code de vérification par email.

        strong Attention :

        ul.list-decimal.ml-6
          li
            | Cette méthode ne protégera pas les utilisateurs en cas d'usurpation du compte email.
          li
            | Si vous désactivez cette option alors que des utilisateurs ont déjà sélectionné l'envoi d'un email
            br
            | comme méthode d'authentification, ces utilisateurs ne pourront plus accéder à la plateforme.

  - modal.with_submit_action "Enregistrer"
  - modal.with_close_action "Annuler"
