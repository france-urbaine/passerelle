= datatable_component(@collectivities) do |datatable|
  - datatable.with_search
  - datatable.with_pagination(@pagy, options: !nested?) if @pagy

  - datatable.with_selection do |selection|
    - if allowed_to_remove_all?
      - selection.with_action "Tout supprimer", polymorphic_path([:remove_all, @namespace, @parent, :collectivities]), modal: true

  - datatable.with_column(:name, sort: true)                          { "Collectivité" }            if columns.include?(:name)
  - datatable.with_column(:siren, sort: true)                         { "SIREN" }                   if columns.include?(:siren)
  - datatable.with_column(:publisher, sort: true)                     { "Éditeur" }                 if columns.include?(:publisher)
  - datatable.with_column(:contact)                                   { "Contact" }                 if columns.include?(:contact)
  - datatable.with_column(:contact_email)                             { "Adresse mail de contact" } if columns.include?(:contact_email)
  - datatable.with_column(:contact_phone)                             { "Numéro de téléphone" }     if columns.include?(:contact_phone)
  - datatable.with_column(:users_count, numeric: true)                { "Utilisateurs" }            if columns.include?(:users_count)
  - datatable.with_column(:packages_transmitted_count, numeric: true) { "Paquets" }                 if columns.include?(:packages_transmitted_count)
  - datatable.with_column(:reports_transmitted_count, numeric: true)  { "Signalements" }            if columns.include?(:reports_transmitted_count)
  - datatable.with_column(:reports_approved_count, numeric: true)     { "Approuvés" }               if columns.include?(:reports_approved_count)
  - datatable.with_column(:reports_rejected_count, numeric: true)     { "Rejetés" }                 if columns.include?(:reports_rejected_count)

  - datatable.with_empty_message do
    - if params[:search]
      | Aucune collectivité ne correspont à votre recherche.
    - else
      | Aucune collectivité disponible.

  - datatable.each_row do |row, collectivity|
    - row.with_checkbox "Sélectionner cette collectivité", described_by: :name, disabled: !allowed_to_remove_all?

    - if allowed_to_edit?(collectivity)
      - row.with_action "Modifier cette collectivité", edit_path(collectivity), icon: "pencil-square", modal: true

    - if allowed_to_remove?(collectivity)
      - row.with_action "Supprimer cette collectivité", remove_path(collectivity), icon: "trash", modal: true

    - row.with_column(:name) do
      - if allowed_to_show?(collectivity)
        = link_to collectivity.name, show_path(collectivity), data: { turbo_frame: "_top" }
      - else
        = collectivity.name

    - row.with_column(:siren) do
      = helpers.display_siren(collectivity.siren)

    - row.with_column(:publisher) do
      - if collectivity.publisher&.kept?
        - if allowed_to_show_publisher?
          = link_to collectivity.publisher.name, publisher_show_path(collectivity.publisher), data: { turbo_frame: "_top" }
        - else
          = collectivity.publisher.name
      - elsif collectivity.publisher&.discarded?
        .text-disabled
          = "#{collectivity.publisher.name} (organisation supprimée)"

    - row.with_column(:contact) do
      = "#{collectivity.contact_first_name} #{collectivity.contact_last_name}".strip.presence

    - row.with_column(:contact_email) do
      = mail_to(collectivity.contact_email) if collectivity.contact_email?

    - row.with_column(:contact_phone) do
      = phone_to(collectivity.contact_phone) if collectivity.contact_phone?

    - row.with_column(:users_count) do
      = number_with_delimiter(collectivity.users_count) if collectivity.users_count.positive?

    - row.with_column(:packages_transmitted_count) do
      = number_with_delimiter(collectivity.packages_transmitted_count) if collectivity.packages_transmitted_count.positive?

    - row.with_column(:reports_transmitted_count) do
      = number_with_delimiter(collectivity.reports_transmitted_count) if collectivity.reports_transmitted_count.positive?

    - row.with_column(:reports_approved_count) do
      = number_with_delimiter(collectivity.reports_approved_count) if collectivity.reports_approved_count.positive?

    - row.with_column(:reports_rejected_count) do
      = number_with_delimiter(collectivity.reports_rejected_count) if collectivity.reports_rejected_count.positive?
