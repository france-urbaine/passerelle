.subheader-bar
  h2.subheader
    = svg_icon("server-stack", "Nouvelle section")
    | Informations relatives au signalement

  .subheader-bar__actions
    .subheader-bar__action
      - if @report.transmitted?
        .badge.priority-badge
          ' Priorité :
          - case @report.priority
          - when "low"
            = svg_icon("chart-bar", "Basse", class: "low-priority-icon")
          - when "medium"
            = svg_icon("chart-bar", "Moyenne", class: "medium-priority-icon")
          - when "high"
            = svg_icon("chart-bar", "Haute", class: "high-priority-icon")
      - else
        = button_component edit_report_path(@report, fields: "priority"), modal: true, class: "priority-button" do
          ' Priorité :
          - case @report.priority
          - when "low"
            = svg_icon("chart-bar", "Basse", class: "low-priority-icon")
          - when "medium"
            = svg_icon("chart-bar", "Moyenne", class: "medium-priority-icon")
          - when "high"
            = svg_icon("chart-bar", "Haute", class: "high-priority-icon")

    .subheader-bar__action
      - if @report.approved?
        .badge.badge--lime Signalement approuvé
      - elsif @report.rejected?
        .badge.badge--red Signalement rejeté
      - elsif @report.debated?
        .badge.badge--orange Demande d'informations complémentaires
      - elsif @report.transmitted? && @report.package.approved?
        .badge.badge--blue Signalement transmis
      - elsif @report.transmitted? && @report.package.rejected?
        .badge.badge--blue Paquet rejeté
      - elsif @report.transmitted?
        .badge.badge--blue Paquet transmis, en attente de confirmation
      - elsif @report.completed?
        .badge.badge--yellow Signalement complété
      - else
        .badge.badge--red Signalement incomplet

.card
  dl.description-list
    .description-list__row
      dt Référence du paquet
      dd
        = authorized_link_to @report.package do
          = @report.package.reference

    .description-list__row
      dt Date de transmission
      dd
        - if @report.transmitted?
          = l(@report.package.transmitted_at.to_date)
        - else
          em Non transmis

    .description-list__row
      dt Date d'échéance
      dd
        - if @report.package.due_on
          = l(@report.package.due_on)
        - elsif @report.packing?
          em A spécifier dans le paquet

    .description-list__row
      dt Type de signalement
      dd= t(@report.form_type, scope: "enum.report_form_type")

    .description-list__row
      dt Objet du signalement
      dd.flex.justify-between.items-start
        = render_valid_content(:anomalies) do
          ul
            - @report.anomalies.each do |anomaly|
              li= t(anomaly, scope: "enum.anomalies")

        - if allowed_to?(:update?, @report) && @report.packing?
          = button_component "Modifier", edit_report_path(@report, fields: "anomalies"), icon: "pencil-square", modal: true

- if require_situation_majic?
  .content__separator
  = render SituationMajic.new(@report)

- if require_situation_evaluation? && require_proposition_evaluation?
  .content__separator
  .content__grid.content__grid--cols-2
    div= render SituationEvaluation.new(@report)
    div= render PropositionEvaluation.new(@report)

- elsif require_situation_evaluation?
  .content__separator
  = render SituationEvaluation.new(@report)

- elsif require_proposition_evaluation?
  .content__separator
  = render PropositionEvaluation.new(@report)

- if require_proposition_address?
  .content__separator
  = render PropositionAdresse.new(@report)

.content__separator
.content__grid.content__grid--cols-2
  div= render Observations.new(@report)
  div= render Enjeu.new(@report)

.content__separator
= render Documents.new(@report)
