= template_frame_component(src: @background_content_url) do |frame|
  - frame.with_modal do |modal|
    - modal.with_header do
      | Gestion des communes gérées par le guichet

    - modal.with_form(model: @services_communes_form, url: service_communes_path(@service), method: :patch) do
      = hidden_param_input(:redirect)

      p Sélectionnez les EPCI et/ou communes dont les dossiers seront traités par ce guichet.

      = fields(model: @services_communes_form) do |form|
        .form-block.form-block--margin
          .checkboxes-collection( data-controller="selection selection-group" )
            .checkboxes-collection__checkbox
              input(
                id="service-communes-check-all"
                type="checkbox"
                data-selection-target="checkall"
              )

              label( for="service-communes-check-all" )
                | Tout le département

            .text-disabled.my-4 Par EPCI :

            = form.collection_check_boxes(:epci_sirens, @services_communes_form.departement_epcis.order(:name), :siren, :name) do |b|
              .checkboxes-collection__checkbox
                = b.check_box data: { selection_target: "checkbox", selection_group_target: "parent", selection_group_target_value: b.object.siren }
                = b.label

            .text-disabled.my-4 Par commune :

            = form.collection_check_boxes(:codes_insee, @services_communes_form.departement_communes.order(:code_insee), :code_insee, :name) do |b|
              .checkboxes-collection__checkbox
                - if b.object.siren_epci
                  = b.check_box data: { selection_target: "checkbox", selection_group_target: "child", selection_group_target_value: b.object.siren_epci  }
                - else
                  = b.check_box data: { selection_target: "checkbox" }
                = b.label

    - modal.with_submit_action "Enregistrer", autofocus: true
    - modal.with_close_action "Annuler"
