= content_frame_component do
  = content_layout_component do |layout|
    - layout.with_breadcrumbs do |breadcrumbs|
      - breadcrumbs.with_path "Territoires"
      - breadcrumbs.with_path "Départements", territories_departements_path
      - breadcrumbs.with_h1 @departement.name

      - if allowed_to?(:manage?, @departement)
        - breadcrumbs.with_action "Modifier", edit_territories_departement_path(@departement), icon: "pencil-square", modal: true

    - layout.with_header icon: "identification" do
      | Description

    - layout.with_section do
      = description_list_component(@departement) do |list|
        - list.with_attribute(:code_departement) do |attribute|
          = @departement.code_departement

        - list.with_attribute(:region) do |attribute|
          = authorized_link_to @departement.region, namespace: :territories

        - list.with_attribute("EPCI") do |attribute|
          - if @departement.epcis_count.positive?
            = display_count(@departement.epcis_count, "EPCI")

        - list.with_attribute("Communes") do |attribute|
          - if @departement.communes_count.positive?
            = display_count(@departement.communes_count, "commune")

        - list.with_attribute("DDFIP enregistrées") do |attribute|
          - if @departement.ddfips_count.positive?
            = display_count(@departement.ddfips_count, "DDFIP")

        - list.with_attribute("Collectivités enregistrées") do |attribute|
          - if @departement.collectivities_count.positive?
            = display_count(@departement.collectivities_count, "collectivité")

    - if allowed_to?(:index?, EPCI)
      - layout.with_header icon: "rectangle-stack" do
        | EPCI

      - layout.with_section do
        - if @departement.epcis_count.zero?
          = card_component(content_class: "card__content--empty")
            | Aucun epci dans ce département.

        - else
          = turbo_frame_tag "datatable-epcis", src: territories_departement_epcis_path(@departement) do
            = datatable_skeleton_component(nested: true, rows: @departement.epcis_count) do |skeleton|
              - skeleton.with_search
              - skeleton.with_pagination

    - if allowed_to?(:index?, Commune)
      - layout.with_header icon: "rectangle-stack" do
        | Communes

      - layout.with_section do
        - if @departement.communes_count.zero?
          = card_component(content_class: "card__content--empty")
            | Aucune commune dans ce département.

        - else
          = turbo_frame_tag "datatable-communes", src: territories_departement_communes_path(@departement) do
            = datatable_skeleton_component(nested: true, rows: @departement.communes_count) do |skeleton|
              - skeleton.with_search
              - skeleton.with_pagination

    - if allowed_to?(:index?, Collectivity)
      - layout.with_header icon: "rectangle-stack" do
        | Collectivités enregistrées

      - layout.with_section do
        - if @departement.collectivities_count.zero?
          = card_component(content_class: "card__content--empty")
            | Aucune collectivité enregistrée dans ce département.

        - else
          = turbo_frame_tag "datatable-collectivities", src: territories_departement_collectivities_path(@departement) do
            = datatable_skeleton_component(nested: true, rows: @departement.collectivities_count) do |skeleton|
              - skeleton.with_search
              - skeleton.with_pagination
