= template_content_component do
  = breadcrumbs_component do |breadcrumbs|
    - breadcrumbs.with_path "Administration"
    - breadcrumbs.with_path "Guichets", admin_offices_path
    - breadcrumbs.with_path @office.name, admin_office_path(@office)
    - breadcrumbs.with_path "Communes"

  = datatable_component(@communes) do |datatable|
    - datatable.with_search
    - datatable.with_pagination(@pagy, options: false)

    - datatable.with_selection do |selection|
      - if allowed_to?(:destroy_all?, Commune, namespace: Admin::Offices)
        - selection.with_action "Exclure les communes du guichet", remove_all_admin_office_communes_path(@office), modal: true

    - datatable.with_column(:name, sort: true, span: 2) { "Commune" }
    - datatable.with_column(:epci, sort: true, span: 2) { "EPCI" }
    - datatable.with_column(:collectivities_count, numeric: true) { "Collectivités" }

    - datatable.with_empty_message do
      | Aucune commune disponible.

    - datatable.each_row do |row, commune|
      - row.with_checkbox "Sélectionner cette commune", described_by: :name, disabled: !allowed_to?(:destroy_all?, Commune, namespace: Admin::Offices)

      - if allowed_to?(:update?, Commune, namespace: Territories)
        - row.with_action "Modifier cette commune", edit_territories_commune_path(commune), icon: "pencil-square", modal: true

      - if allowed_to?(:destroy?, Commune, namespace: Admin::Offices)
        - row.with_action "Exclure cet utilisateur du guichet", remove_admin_office_commune_path(@office, commune), icon: "arrow-right-on-rectangle", modal: true

      - row.with_column(:name) do |column|
        - column.with_span do
          = commune.code_insee

        - column.with_span do
          = authorized_link_to commune, scope: :territories do
            = commune.name

      - row.with_column(:epci) do |column|
        - if commune.epci
          - column.with_span do
            = display_siren(commune.siren_epci)

          - column.with_span do
            = authorized_link_to commune.epci, scope: :territories do
              = commune.epci.name

      - row.with_column(:collectivities_count) do
        = number_with_delimiter(commune.collectivities_count) if commune.collectivities_count.positive?

