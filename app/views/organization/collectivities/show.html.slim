= content_frame_component do
  = content_layout_component do |layout|
    - layout.with_breadcrumbs do |breadcrumbs|
      - breadcrumbs.with_path "Mon organisation"
      - breadcrumbs.with_path "Collectivités", organization_collectivities_path
      - breadcrumbs.with_h1 @collectivity.name

      - if allowed_to?(:update?, @collectivity)
        - breadcrumbs.with_action "Modifier", edit_organization_collectivity_path(@collectivity), icon: "pencil-square", modal: true

      - if allowed_to?(:destroy?, @collectivity)
        - breadcrumbs.with_action "Supprimer", remove_organization_collectivity_path(@collectivity), icon: "trash", modal: true, destructive: "discrete"

    - layout.with_header icon: "identification" do
      | Description

    - layout.with_section do
      = description_list_component(@collectivity) do |list|
        - list.with_attribute(:territory) do |attribute|
          = authorized_link_to @collectivity.territory, namespace: :organization do
            = @collectivity.territory.qualified_name
            = " (#{@collectivity.territory.model_name.human})"

        - unless current_organization.is_a?(Publisher)
          - list.with_attribute(:publisher) do |attribute|
            = authorized_link_to @collectivity.publisher, namespace: :organization

        - list.with_attribute(:siren) do |attribute|
          = display_siren(@collectivity.siren)

        - list.with_attribute("Contact") do |attribute|
          = "#{@collectivity.contact_first_name} #{@collectivity.contact_last_name}".strip.presence

        - list.with_attribute("Adresse mail de contact") do |attribute|
          - if @collectivity.contact_email?
            = mail_to(@collectivity.contact_email)

        - list.with_attribute("Numéro de téléphone") do |attribute|
          - if @collectivity.contact_phone?
            = phone_to(@collectivity.contact_phone)

        - list.with_attribute("Utilisateurs") do |attribute|
          - if @collectivity.users_count.positive?
            = display_count(@collectivity.users_count, "utilisateur")

          / TODO: show only counts of packages & reports send through publisher API
          / .description-list__row
          /   dt Paquets
          /   dd
          /     - if @collectivity.packages_transmitted_count.positive?
          /       = display_count(@collectivity.packages_transmitted_count, "transmis")
          /       = " / "
          /       = display_count(@collectivity.packages_assigned_count, "approuvé")
          /       = " / "
          /       = display_count(@collectivity.packages_returned_count, "rejeté")
          /
          / .description-list__row
          /   dt Signalements
          /   dd
          /     - if @collectivity.reports_transmitted_count.positive?
          /       = display_count(@collectivity.reports_transmitted_count, "transmis")
          /       = " / "
          /       = display_count(@collectivity.reports_approved_count, "approuvé")
          /       = " / "
          /       = display_count(@collectivity.reports_returned_count, "rejeté")

    - if allowed_to?(:index?, User, with: Organization::Collectivities::UserPolicy, context: { collectivity: @collectivity })
      - layout.with_header icon: "rectangle-stack" do |header|
        | Utilisateurs

        - if allowed_to?(:create?, User, with: Organization::Collectivities::UserPolicy, context: { collectivity: @collectivity })
          - header.with_action "Inviter un utilisateur", new_organization_collectivity_user_path(@collectivity), icon: "plus", modal: true

      - layout.with_section do
        - if @collectivity.users_count.zero?
          = card_component(class: "card--empty")
            | Aucun utilisateur assigné.

        - else
          = turbo_frame_tag "datatable-users", src: organization_collectivity_users_path(@collectivity) do
            = datatable_skeleton_component(nested: true, rows: @collectivity.users_count) do |skeleton|
              - skeleton.with_search
              - skeleton.with_pagination

    - elsif current_organization.is_a?(Publisher)
      - layout.with_section do
        = card_component(class: "card--empty")
          | La collectivité ne vous a pas autorisé à gerer son compte et ses utilisateurs.
