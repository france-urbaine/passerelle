= breadcrumbs_component do |breadcrumbs|
  - breadcrumbs.with_path "Territoires"
  - breadcrumbs.with_path "Communes"

  - breadcrumbs.with_action "Mettre à jour", edit_territories_path(redirect: current_path), icon: "cloud-arrow-down", modal: true

= datatable_component(communes.preload(:departement, :epci)) do |datatable|
  - datatable.with_search
  - datatable.with_pagination(pagy)

  - datatable.with_column(:name,        sort: true, span: 2) { "Commune" }
  - datatable.with_column(:departement, sort: true, span: 2) { "Département" }
  - datatable.with_column(:epci,        sort: true, span: 2) { "EPCI" }
  - datatable.with_column(:collectivities, numeric: true)    { "Collectivités" }

  - datatable.with_empty_message do
    | Aucune commune disponible.

  - datatable.each_row do |row, commune|
    - row.with_action "Modifier cette commune", edit_commune_path(commune), icon: "pencil-square", modal: true

    - row.with_column(:name) do |column|
      - column.with_span do
        = commune.code_insee

      - column.with_span do
        = link_to commune_path(commune, current_index_back_params), data: { turbo_frame: "_top" } do
          = commune.name

    - row.with_column(:departement) do |column|
      - if commune.departement
        - column.with_span do
          = commune.code_departement

        - column.with_span do
          = link_to departement_path(commune.departement), data: { turbo_frame: "_top" } do
            = commune.departement.name

    - row.with_column(:epci) do |column|
      - if commune.epci
        - column.with_span do
          = display_siren(commune.siren_epci)

        - column.with_span do
          = link_to epci_path(commune.epci), data: { turbo_frame: "_top" } do
            = commune.epci.name

    - row.with_column(:collectivities) do
      = number_with_delimiter(commune.collectivities_count) if commune.collectivities_count.positive?

