= dialog_component do |dialog|
  = turbo_frame_tag :modal_form do
    = form_with(model: commune) do |form|
      .dialog__header
        h1#dialog-title.dialog__title
          | Modification de la commune

        .dialog__header-toolbar
          = dialog.close_button href: params.fetch(:form_back, communes_path)

      .dialog__content
        = form_back_param_input

        = form.block :name, first: true do
          = form.label :name
          = form.text_field :name, autofocus: true, required: true

        = form.block :code_insee do
          = form.label :code_insee
          = form.text_field :code_insee, required: true

        = form.block :departement, autocomplete: departements_path do
          = form.label :departement
          = form.search_field :departement, value: commune.departement&.name, required: true, data: { autocomplete_target: "input" }
          = form.hidden_field :code_departement, data: { autocomplete_target: "hidden" }

        = form.block :epci, autocomplete: epcis_path do
          = form.label :epci
          = form.search_field :epci, value: commune.epci&.name, data: { autocomplete_target: "input" }
          = form.hidden_field :siren_epci, data: { autocomplete_target: "hidden" }

        = noscript do
          = form.block :code_departement do
            = form.label :code_departement
            = form.text_field :code_departement, required: true

          = form.block :siren_epci do
            = form.label :siren_epci
            = form.text_field :siren_epci

        = form.block :qualified_name do
          = form.label :qualified_name
          = form.text_field :qualified_name

      .dialog__actions
        button.button.button--primary( type="submit" ) Enregistrer
        = dialog.cancel_button "Annuler", href: params.fetch(:form_back, communes_path)
