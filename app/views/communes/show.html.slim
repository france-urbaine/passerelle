= template_frame_component do
  = breadcrumbs_component do |breadcrumbs|
    - breadcrumbs.with_path "Territoires"
    - breadcrumbs.with_path "Communes", communes_path
    - breadcrumbs.with_path @commune.name

    - if allowed_to?(:manage?, @commune)
      - breadcrumbs.with_action "Modifier", edit_commune_path(@commune), icon: "pencil-square", modal: true

  h2.subheader
    = svg_icon("identification", "Nouvelle section")
    | Description

  .card
    dl.description-list
      .description-list__row
        dt Code INSEE de la commune
        dd= @commune.code_insee

      .description-list__row
        dt Région
        dd
          - if @commune.region
            = authorized_link_to @commune.region do
              = @commune.region.name

      .description-list__row
        dt Département
        dd
          - if @commune.departement
            = authorized_link_to @commune.departement do
              = @commune.departement.name

      .description-list__row
        dt EPCI
        dd
          - if @commune.epci
            = authorized_link_to @commune.epci do
              = @commune.epci.name

      .description-list__row
        dt Collectivités enregistrées
        dd= display_count(@commune.collectivities_count, "collectivité") if @commune.collectivities_count.positive?

  .content__separator

  .subheader-bar
    h2.subheader
      = svg_icon("rectangle-stack", "Nouvelle section")
      | Collectivités enregistrées

  - if @commune.collectivities_count.zero?
    = card_component(content_class: "card__content--empty")
      | Aucune collectivité enregistrée dans cette commune.

  - else
    table.datatable
      thead
        tr.datatable__row
          th Collectivité
          th SIREN
          th Éditeur

      tbody
        - @commune.on_territory_collectivities.kept.preload(:publisher).each do |collectivity|
          tr.datatable__row
            td
              = authorized_link_to collectivity do
                = collectivity.name
            td
              = display_siren(collectivity.siren)
            td
              = authorized_link_to collectivity.publisher do
                = collectivity.publisher.name
