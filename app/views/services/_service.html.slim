= breadcrumbs_component do |breadcrumbs|
  - breadcrumbs.with_path "Organisations"
  - breadcrumbs.with_path "Guichets", href: services_path(retrieve_index_back_params)
  - breadcrumbs.with_path service.name

  - breadcrumbs.with_action "Modifier",
    href: edit_service_path(service, content: current_path, redirect: current_path),
    icon: "pencil-square",
    modal: true

  - breadcrumbs.with_action "Supprimer",
    href: remove_service_path(service, content: current_path),
    icon: "trash",
    modal: true

- if service.discarded?
  .card.mb-6
    .card__content.bg-yellow-100.text-yellow-700( role="alert" )
      b Guichet en cours de suppression.
      br
      |  Ce guichet a été archivé le #{localize(service.discarded_at.to_date)}.
      br
      |  Il sera définitivement supprimé le #{localize(30.days.after(service.discarded_at.to_date))}.

h2.subheader
  = svg_icon("bookmark", "Nouvelle section")
  | Description

.card.mb-6
  dl.description-list
    .description-list__row
      dt DDFIP
      dd
        - if service.ddfip
          a(
            data-turbo-frame="_top"
            href=ddfip_path(service.ddfip)
          )= service.ddfip.name

    .description-list__row
      dt Département
      dd
        - if service.ddfip&.departement
          a(
            data-turbo-frame="_top"
            href=departement_path(service.ddfip.departement)
          )= service.ddfip.departement.name

    .description-list__row
      dt Utilisateurs
      dd= display_count(service.users_count, "utilisateur") if service.users_count.positive?

    .description-list__row
      dt Communes gérées
      dd.flex.justify-between.items-start
        - if service.communes_count.positive?
          span= display_count(service.communes_count, "commune")

          a.button(
            data-turbo-frame="_top"
            href=communes_path(search: service.name)
          )
            = svg_icon("search")
            | Voir les communes

.subheader-bar
  h2.subheader
    = svg_icon("bookmark", "Nouvelle section")
    | Utilisateurs en charge du guichet

  .subheader-bar__actions
    .subheader-bar__action
      a.button(
        data-turbo-frame="modal"
        href=new_user_path(content: current_path, redirect: current_path, user: { organization_type: "DDFIP", organization_id: @service.ddfip_id, service_ids: [@service.id] })
      )
        = svg_icon("plus")
        | Inviter un nouvel utilisateur

    .subheader-bar__action
      a.button(
        data-turbo-frame="modal"
        href=edit_service_users_path(service, content: current_path, redirect: current_path)
      )
        = svg_icon("squares-plus")
        | Gérer les utilisateurs

- if service.users_count.zero?
  .card.mb-6
    .card__content
      p.text-disabled Aucun utilisateur lié à ce guichet.
- else
  table.datatable.mb-6
    thead
      tr.datatable__row
        th( aria-label="Actions" )
        th Utilisateur
        th Adresse mail

    tbody
      - service.users.kept.order(:created_at).each do |user|
        tr.datatable__row
          td.datatable__row-actions
            .flex
              a.icon-button(
                href=edit_user_path(user, content: current_path, redirect: current_path)
                aria-label="Modifier cet utilisateur"
                data-turbo-frame="modal"
              )
                = svg_icon("pencil-square", "Modifier cet utilisateur")
                span.tooltip Modifier cet utilisateur

              a.icon-button(
                aria-label="Supprimer cet utilisateur"
                data-turbo-frame="modal"
                href=remove_user_path(user, content: current_path, redirect: current_path)
              )
                = svg_icon("trash", "Supprimer cet utilisateur")
                span.tooltip Supprimer cet utilisateur

          td
            a(
              data-turbo-frame="_top"
              href=user_path(user, current_index_back_params)
            )= user.name

          td
            - if user.confirmed?
              = mail_to user.email
            - else
              .text-disabled( title="Cet utilisateur n'a pas encore validé son inscription" )
                = svg_icon("exclamation-triangle", class: "mr-2")
                = user.email
                span.tooltip Cet utilisateur n'a pas encore validé son inscription

.subheader-bar
  h2.subheader
    = svg_icon("bookmark", "Nouvelle section")
    | Communes sous la responsabilité du guichet

  .subheader-bar__actions
    .subheader-bar__action
      a.button(
        data-turbo-frame="modal"
        href=edit_service_communes_path(service, content: current_path, redirect: current_path)
      )
        = svg_icon("squares-plus")
        | Gérer les communes

- if service.communes_count.zero?
  .card.mb-6
    .card__content
      p.text-disabled Aucune commune liée à ce guichet.
- else
  table.datatable.mb-6
    thead
      tr.datatable__row
        th( aria-label="Actions" )
        th( colspan="2" ) Commune
        th( colspan="2" ) EPCI
        th.w-48.text-right Collectivités

    tbody
      - service.communes.preload(:epci).each do |commune|
        tr.datatable__row
          td.datatable__row-actions
            a.icon-button(
              aria-label="Modifier cette commune"
              data-turbo-frame="modal"
              href=edit_commune_path(commune, content: current_path, redirect: current_path)
            )
              = svg_icon("pencil-square", "Modifier cette commune")
              span.tooltip Modifier cette commune

          td.w-px= commune.code_insee
          td( id=dom_id(commune, :title) )
            a(
              data-turbo-frame="_top"
              href=commune_path(commune, current_index_back_params)
            )= commune.name

          - if commune.siren_epci?
            td.w-px= display_siren(commune.siren_epci)
            td
              - if commune.epci
                a(
                  data-turbo-frame="_top"
                  href=epci_path(commune.epci)
                )= commune.epci.name

          - else
            td( colspan="2" )

          td.text-right= number_with_delimiter(commune.collectivities_count) if commune.collectivities_count.positive?