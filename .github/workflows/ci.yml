# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test_unit:
    name: test:unit
    runs-on: ubuntu-latest
    services:
      # Setup a postgres database to run tests
      #
      postgres:
        image: postgres:14.8
        env:
          POSTGRES_DB:       fiscahub_dev
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby & install gems bundle
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: true

    - name: Set up Yarn
      uses: actions/setup-node@v3
      with:
        cache: 'yarn'

    - name: Install JS packages
      run: yarn

    - name: Set up application
      env:
        POSTGRESQL_HOST:     localhost
        POSTGRESQL_PORT:     5432
        POSTGRESQL_USER:     postgres
        POSTGRESQL_PASSWORD: postgres
        POSTGRESQL_DATABASE: fiscahub_dev
      run: |
        bin/setup test

    - name: Run tests
      env:
        CI:                  true
        RAILS_MASTER_KEY:    ${{ secrets.RAILS_MASTER_KEY }}
        POSTGRESQL_HOST:     localhost
        POSTGRESQL_PORT:     5432
        POSTGRESQL_USER:     postgres
        POSTGRESQL_PASSWORD: postgres
        POSTGRESQL_DATABASE: fiscahub_dev
      run: |
        bin/ci test:unit

  test_system:
    name: test:system
    runs-on: ubuntu-latest
    services:
      # Setup a postgres database to run tests
      #
      postgres:
        image: postgres:14.8
        env:
          POSTGRES_DB:       fiscahub_dev
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby & install gems bundle
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: true

    - name: Set up Yarn
      uses: actions/setup-node@v3
      with:
        cache: 'yarn'

    - name: Install JS packages
      run: yarn

    - name: Set up application
      env:
        POSTGRESQL_HOST:     localhost
        POSTGRESQL_PORT:     5432
        POSTGRESQL_USER:     postgres
        POSTGRESQL_PASSWORD: postgres
        POSTGRESQL_DATABASE: fiscahub_dev
      run: |
        bin/setup test

    - name: Run tests
      env:
        CI:                     true
        RAILS_MASTER_KEY:       ${{ secrets.RAILS_MASTER_KEY }}
        POSTGRESQL_HOST:        localhost
        POSTGRESQL_PORT:        5432
        POSTGRESQL_USER:        postgres
        POSTGRESQL_PASSWORD:    postgres
        POSTGRESQL_DATABASE:    fiscahub_dev
      run: |
        bin/ci test:system

  rubocop:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: true

    - name: Run rubocop
      run: |
        bin/ci rubocop

  brakeman:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: true

    - name: Run brakeman
      run: |
        bin/ci brakeman

  audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: true

    - name: Run audit
      run: |
        bin/ci audit
